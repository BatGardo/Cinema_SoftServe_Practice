@model Cinema_Project.ViewModels.MovieGenreViewModel

@{
    ViewData["Title"] = "Home Page";
    
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="row mb-3">
    <div class="col">
        <form method="get" action="@Url.Action("Index", "Home")" id="searchForm">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search by title" name="search" id="searchInput">
                <button type="submit" class="btn btn-primary" id="searchSubmit">Search</button>
            </div>
        </form>
        <div class="dropdown" id="searchDropdown">
            <div class="dropdown-menu" aria-labelledby="searchInput">
                <!-- Dropdown items will be populated dynamically -->
            </div>
        </div>
    </div>
</div>

<div class="dropdown" id="myDropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" aria-haspopup="true" aria-expanded="false">
        Dropdown button
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        @foreach (var genre in Model.Genres)
        {
            <label>
                <input type="checkbox" id="@genre.GenreId" onchange="filterMovies()"> @genre.Title
            </label>
        }


    </div>

</div>




<div id="moviesContainer">
    @foreach (var movie in Model.Movies)
    {
        <div class="movie" data-genres="@string.Join(",", movie.MovieGenres.Select(g => g.GenreId))">
            <h2>@movie.Title</h2>
            <p>@movie.Description</p>
            <p>Release Date: @movie.ReleaseDate.ToShortDateString()</p>
            <p>Duration: @movie.Duration</p>
            <p>Rating: @movie.Rating</p>
            <p>
                Genres:
                @if (movie.MovieGenres != null)
                {
                    @foreach (var genre in movie.MovieGenres)
                    {
                        <span>@genre.Genre.Title</span>
                    }
                }
            </p>
            <button type="button" class="btn btn-primary btn-sm float-end"
                    onclick="showMovieDetails(@movie.MovieId)">
                More
            </button>
        </div>
    }
</div>





<script>
    function showMovieDetails(movieId) {
        $.ajax({
            url: '@Url.Action("GetMovieDetails", "Home")',
            type: 'GET',
            data: { id: movieId },
            success: function (data) {
                $('#modalContent').html(data);
                $('#exampleModal').modal('show');
            }
        });
    }


    document.addEventListener('DOMContentLoaded', function () {
        var searchInput = document.getElementById('searchInput');
        var searchDropdown = document.getElementById('searchDropdown');

        searchInput.addEventListener('input', function () {
            var searchText = searchInput.value;
            $.ajax({
                url: '@Url.Action("Search", "Home")',
                type: 'GET',
                data: { search: searchText },
                success: function (data) {
                    searchDropdown.innerHTML = '';

                    data.forEach(function (data) {
                        var link = document.createElement('a');
                        link.setAttribute('class', 'dropdown-item');
                        link.setAttribute('href', '#');
                        link.textContent = 'IMG ' + data.title + ' - Rating: ' + data.rating;


                        searchDropdown.appendChild(link);
                    });

                    searchDropdown.style.display = 'block';
                }
            });
        });
    });


    document.addEventListener('DOMContentLoaded', function () {
        var dropdown = document.getElementById('myDropdown');
        var dropdownMenu = dropdown.querySelector('.dropdown-menu');

        dropdown.addEventListener('click', function (event) {
            var target = event.target;

            if (target.getAttribute('aria-haspopup')) {
                if (dropdownMenu.classList.contains('show')) {
                    dropdownMenu.classList.remove('show');
                } else {
                    dropdownMenu.classList.add('show');
                }
            }
        });

        // Закрыть выпадающее меню при клике вне его области
        document.addEventListener('click', function (event) {
            if (!dropdown.contains(event.target)) {
                dropdownMenu.classList.remove('show');
            }
        });
    });



    function filterMovies() {
        var selectedGenres = [];
        var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
        checkboxes.forEach(function (checkbox) {
            selectedGenres.push(checkbox.id);
        });

        var movies = document.querySelectorAll('.movie');
        movies.forEach(function (movie) {
            var genres = movie.dataset.genres.split(',');
            if (selectedGenres.length === 0 || genres.some(genre => selectedGenres.includes(genre))) {
                movie.style.display = 'block';
            } else {
                movie.style.display = 'none';
            }
        });
    }



</script>

<div class="modal" tabindex="-1" role="dialog" id="exampleModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modalContent">
            <!-- Місце для відображення інформації про фільм -->
        </div>
    </div>
</div>



